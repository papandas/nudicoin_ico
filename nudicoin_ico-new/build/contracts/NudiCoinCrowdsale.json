{
  "contractName": "NudiCoinCrowdsale",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "hasClosed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goal",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOpen",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "closingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finalize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "capReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goalReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "finalized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "openingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "refundee",
          "type": "address"
        }
      ],
      "name": "claimRefund",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "openingTime",
          "type": "uint256"
        },
        {
          "name": "closingTime",
          "type": "uint256"
        },
        {
          "name": "rate",
          "type": "uint256"
        },
        {
          "name": "wallet",
          "type": "address"
        },
        {
          "name": "cap",
          "type": "uint256"
        },
        {
          "name": "token",
          "type": "address"
        },
        {
          "name": "goal",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "CrowdsaleFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "prevClosingTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "newClosingTime",
          "type": "uint256"
        }
      ],
      "name": "TimedCrowdsaleExtended",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensPurchased",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"hasClosed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"goal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOpen\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"closingTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finalize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"capReached\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"goalReached\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"finalized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"openingTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"refundee\",\"type\":\"address\"}],\"name\":\"claimRefund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"openingTime\",\"type\":\"uint256\"},{\"name\":\"closingTime\",\"type\":\"uint256\"},{\"name\":\"rate\",\"type\":\"uint256\"},{\"name\":\"wallet\",\"type\":\"address\"},{\"name\":\"cap\",\"type\":\"uint256\"},{\"name\":\"token\",\"type\":\"address\"},{\"name\":\"goal\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"CrowdsaleFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"prevClosingTime\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"newClosingTime\",\"type\":\"uint256\"}],\"name\":\"TimedCrowdsaleExtended\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This is an example of a fully fledged crowdsale.\\r The way to add new features to a base crowdsale is by multiple inheritance.\\r In this example we are providing following extensions:\\r CappedCrowdsale - sets a max boundary for raised funds\\r RefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\\r MintedCrowdsale - assumes the token can be minted by the crowdsale, which does so\\r when receiving purchases.\\r  * After adding multiple features it's good practice to run integration tests\\r to ensure that subcontracts works together as intended.\\r\",\"methods\":{\"buyTokens(address)\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\",\"params\":{\"beneficiary\":\"Recipient of the token purchase\"}},\"cap()\":{\"return\":\"the cap of the crowdsale.\"},\"capReached()\":{\"details\":\"Checks whether the cap has been reached.\",\"return\":\"Whether the cap was reached\"},\"claimRefund(address)\":{\"details\":\"Investors can claim refunds here if crowdsale is unsuccessful.\",\"params\":{\"refundee\":\"Whose refund will be claimed.\"}},\"closingTime()\":{\"return\":\"the crowdsale closing time.\"},\"finalize()\":{\"details\":\"Must be called after crowdsale ends, to do some extra finalization work. Calls the contract's finalization function.\"},\"finalized()\":{\"return\":\"true if the crowdsale is finalized, false otherwise.\"},\"goal()\":{\"return\":\"minimum amount of funds to be raised in wei.\"},\"goalReached()\":{\"details\":\"Checks whether funding goal was reached.\",\"return\":\"Whether funding goal was reached\"},\"hasClosed()\":{\"details\":\"Checks whether the period in which the crowdsale is open has already elapsed.\",\"return\":\"Whether crowdsale period has elapsed\"},\"isOpen()\":{\"return\":\"true if the crowdsale is open, false otherwise.\"},\"openingTime()\":{\"return\":\"the crowdsale opening time.\"},\"rate()\":{\"return\":\"the number of token units a buyer gets per wei.\"},\"token()\":{\"return\":\"the token being sold.\"},\"wallet()\":{\"return\":\"the address where funds are collected.\"},\"weiRaised()\":{\"return\":\"the amount of wei raised.\"}},\"title\":\"NudiCoinCrowdsale\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/xampp/htdocs/BLOCKCHAIN/nudicoin_ico/nudicoin_ico-new/contracts/NudiCoinCrowdsale.sol\":\"NudiCoinCrowdsale\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/xampp/htdocs/BLOCKCHAIN/nudicoin_ico/nudicoin_ico-new/contracts/NudiCoinCrowdsale.sol\":{\"keccak256\":\"0x209f99fe215a008aaa1a995ce15391701622d48bec906fce96209090a3e6e366\",\"urls\":[\"bzzr://0c7253f707bea6f6c86fc85b407732627baa1d5b8840414386f23f82c5d63579\"]},\"openzeppelin-solidity/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzzr://bd34c1ce05b5b2b3a62fc02e160f6805b1cadd476854664f433c685b2fda8dad\"]},\"openzeppelin-solidity/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0x63da54a7a5d4e4d82ac8d1f4f7f995fd8ef2b5fe1f2960b83e534fa37fb60910\",\"urls\":[\"bzzr://cea53b805426e40efadb24f2613aca39182462e9ecd23fde7aacf0c4b5885aaf\"]},\"openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol\":{\"keccak256\":\"0x6fd4b01de35c3acba3b2a78d915a12abf893b7d392c07370b53881bde8a8a272\",\"urls\":[\"bzzr://0c4cec40e7b9ddd133193d88ae3a81cd162396b73add7bee6263231c89a32566\"]},\"openzeppelin-solidity/contracts/crowdsale/distribution/FinalizableCrowdsale.sol\":{\"keccak256\":\"0x22ad427395c439878122cbfbf13e896fd48d1fad0c6fc889a36b4f1bf4743ff4\",\"urls\":[\"bzzr://1c725bc536a34c8ae31246c7c4327a2fe7abeb7686979516c1ab65c8959f71ec\"]},\"openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol\":{\"keccak256\":\"0x6bd89da8cba19e12e2f482b7fbd1309376f8a0c84bdc6a3c9a49a4b2b08ae172\",\"urls\":[\"bzzr://cbcf47e842698ffb7f0ae8b2da9f005c3287d7e859f2bfc31eeeb712bfc61aa4\"]},\"openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol\":{\"keccak256\":\"0x343249b95ade6a20737b7f681a05a257f14a39b21043ff2e31d8e5d861d83777\",\"urls\":[\"bzzr://3a53c6bbb534d2f038289952e35a75bb572f5998582b1d47827907f027dd7fb4\"]},\"openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol\":{\"keccak256\":\"0x5ae16586a3b5e976aae1a08fdf109ead3840961aa0a1f5b4590d4adf5cdad3b5\",\"urls\":[\"bzzr://3128e606836af985a2c445aa5c5886c6ac6181d8edf565a2a2743fe502859ba2\"]},\"openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol\":{\"keccak256\":\"0x9407dd37cfed74aa107fd1614c478ba0a2bc3e084e9aa8fbd5a6f316c53aed3b\",\"urls\":[\"bzzr://196407d49d26f709494b573b06676eaa21b0019ebebd4e610a8b1276965a8067\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzzr://1604f5b6d6e916c154efd8c6720cda069e5ba32dfa0a9dedf2b42e5b02d07f89\"]},\"openzeppelin-solidity/contracts/ownership/Secondary.sol\":{\"keccak256\":\"0xa5f5ed53adb91ab6a16bee78b255b4b8ed59945bd5c9a7b360d8a62fc63b8da0\",\"urls\":[\"bzzr://2dd07a98e47fe608668d8d3a6591b27e5bd884cdf2f2e6dbd8e571f3a43ea8e3\"]},\"openzeppelin-solidity/contracts/payment/escrow/ConditionalEscrow.sol\":{\"keccak256\":\"0x707bb203cb0dda04fa77dbc1768aff347927a77f2bee6610491b809a31d78db1\",\"urls\":[\"bzzr://b3ca6da72b1a6c881f8166ed6f50dc478419fda7199ae54ab80df5dc13a615af\"]},\"openzeppelin-solidity/contracts/payment/escrow/Escrow.sol\":{\"keccak256\":\"0x50d706eae690fd943acb15f93718932efbb871e6d5cabba8f9d55668c4180978\",\"urls\":[\"bzzr://cbab282856bd375f08edc3b7e7b91a0e84a07b774e6745c9ac8566497fd1633d\"]},\"openzeppelin-solidity/contracts/payment/escrow/RefundEscrow.sol\":{\"keccak256\":\"0x316fbc76d98e4a1103d612710398770d6041ecaff7ffbf1c9aee56253f5f5499\",\"urls\":[\"bzzr://01f16146893642d25250a525d24553300c81a330a373c8c98e02794c355146a7\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x852793a3c2f86d336a683b30d688ec3dcfc57451af5a2bf5975cda3b7191a901\",\"urls\":[\"bzzr://07fb42206812a17c1f71e548cfa5cec6f9aa1ae0ca5df870718ca4aa9759d1a5\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0xc61b3603089b09a730d8ca72e9133a496cc4405da40e9b87c12f073245d774bf\",\"urls\":[\"bzzr://f280f38d5ab6e1b89fd898ccd3901054a56572c141d91d30302e2db1db4cc6ff\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0x6df8d686813b2875e99928ecd07bf8ee6d7473bc6a95eb1190e8fdba86beda76\",\"urls\":[\"bzzr://b4a3a1136392be8723a0d9627d1626323e3891c98e88ca5ab48da1dada375580\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzzr://aa8b45b57edafc3d67bc5d916327ea16807fae33f753ca163ae0c4061b789766\"]},\"openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf6f89424e17870561dc23c5933c55c5726b66a68d51ad2a2c00c569a5f02f507\",\"urls\":[\"bzzr://28230529ef5e63b09eec01e3ca835ccb722533bc5379e6fdd04270c42157f8c3\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xf3358e5819ca73357abd6c90bdfffd0474af54364897f6b3e3234c4b71fbe9a1\",\"urls\":[\"bzzr://f7f6da60a184233fd666ac44e6fb2bd51ca6ebdc4867a310d368049aa4e62786\"]},\"openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x0441ff2b36d503f3a29d28d3754291f119064f4973d5c780698143d919037a78\",\"urls\":[\"bzzr://d26b514ac785d2a74a903067d051b34541e86a7fc63b782bb39d3a576d8eb4da\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405160e08062002e4f833981018060405260e08110156200003357600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919050505080878785888887600160008190555060008311151562000108576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f43726f776473616c653a2072617465206973203000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515620001d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001807f43726f776473616c653a2077616c6c657420697320746865207a65726f20616481526020017f647265737300000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515620002a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f43726f776473616c653a20746f6b656e20697320746865207a65726f2061646481526020017f726573730000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b8260038190555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050600081111515620003a5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f43617070656443726f776473616c653a2063617020697320300000000000000081525060200191505060405180910390fd5b80600581905550504282101515156200044c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260338152602001807f54696d656443726f776473616c653a206f70656e696e672074696d652069732081526020017f6265666f72652063757272656e742074696d650000000000000000000000000081525060400191505060405180910390fd5b8181111515620004ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260378152602001807f54696d656443726f776473616c653a206f70656e696e672074696d652069732081526020017f6e6f74206265666f726520636c6f73696e672074696d6500000000000000000081525060400191505060405180910390fd5b816006819055508060078190555050506000600860006101000a81548160ff0219169083151502179055506000811115156200058e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f526566756e6461626c6543726f776473616c653a20676f616c2069732030000081525060200191505060405180910390fd5b620005a7620006f9640100000000026401000000009004565b620005b162000723565b808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604051809103906000f08015801562000604573d6000803e3d6000fd5b50600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060098190555050828111151515620006ec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001807f4e756469436f696e43726f776453616c653a20676f616c20697320677265617481526020017f6572207468616e2063617000000000000000000000000000000000000000000081525060400191505060405180910390fd5b5050505050505062000734565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60405161149180620019be83390190565b61127a80620007446000396000f3fe6080604052600436106100e6576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631515bc2b146100f15780632c4e722e14610120578063355274ea1461014b57806340193883146101765780634042b66f146101a157806347535d7b146101cc5780634b6753bc146101fb5780634bb278f3146102265780634f9359451461023d578063521eb2731461026c5780637d3d6522146102c3578063b3f05b97146102f2578063b7a8807c14610321578063bffa55d51461034c578063ec8ac4d81461039d578063fc0c546a146103e1575b6100ef33610438565b005b3480156100fd57600080fd5b50610106610597565b604051808215151515815260200191505060405180910390f35b34801561012c57600080fd5b506101356105a3565b6040518082815260200191505060405180910390f35b34801561015757600080fd5b506101606105ad565b6040518082815260200191505060405180910390f35b34801561018257600080fd5b5061018b6105b7565b6040518082815260200191505060405180910390f35b3480156101ad57600080fd5b506101b66105c1565b6040518082815260200191505060405180910390f35b3480156101d857600080fd5b506101e16105cb565b604051808215151515815260200191505060405180910390f35b34801561020757600080fd5b506102106105e6565b6040518082815260200191505060405180910390f35b34801561023257600080fd5b5061023b6105f0565b005b34801561024957600080fd5b50610252610768565b604051808215151515815260200191505060405180910390f35b34801561027857600080fd5b5061028161077c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102cf57600080fd5b506102d86107a6565b604051808215151515815260200191505060405180910390f35b3480156102fe57600080fd5b506103076107ba565b604051808215151515815260200191505060405180910390f35b34801561032d57600080fd5b506103366107d1565b6040518082815260200191505060405180910390f35b34801561035857600080fd5b5061039b6004803603602081101561036f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107db565b005b6103df600480360360208110156103b357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610438565b005b3480156103ed57600080fd5b506103f66109f8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60016000808282540192505081905550600080549050600034905061045d8382610a22565b600061046882610aac565b905061047f82600454610aca90919063ffffffff16565b60048190555061048f8482610b54565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a36105068483610b62565b61050e610b66565b6105188483610c3e565b505060005481141515610593576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b5050565b60006007544211905090565b6000600354905090565b6000600554905090565b6000600954905090565b6000600454905090565b600060065442101580156105e157506007544211155b905090565b6000600754905090565b600860009054906101000a900460ff1615151561069b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001807f46696e616c697a61626c6543726f776473616c653a20616c726561647920666981526020017f6e616c697a65640000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6106a3610597565b1515610717576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f46696e616c697a61626c6543726f776473616c653a206e6f7420636c6f73656481525060200191505060405180910390fd5b6001600860006101000a81548160ff02191690831515021790555061073a610c42565b7f9270cc390c096600a1c17c44345a1ba689fafd99d97487b10cfccf86cf73183660405160405180910390a1565b60006005546107756105c1565b1015905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006009546107b36105c1565b1015905090565b6000600860009054906101000a900460ff16905090565b6000600654905090565b6107e36107ba565b151561087d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f526566756e6461626c6543726f776473616c653a206e6f742066696e616c697a81526020017f656400000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6108856107a6565b151515610920576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f526566756e6461626c6543726f776473616c653a20676f616c2072656163686581526020017f640000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351cff8d9826040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156109dd57600080fd5b505af11580156109f1573d6000803e3d6000fd5b5050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610a2a6105cb565b1515610a9e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f54696d656443726f776473616c653a206e6f74206f70656e000000000000000081525060200191505060405180910390fd5b610aa88282610e39565b5050565b6000610ac360035483610eda90919063ffffffff16565b9050919050565b6000808284019050838110151515610b4a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b610b5e8282610fa7565b5050565b5050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f340fa0134336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506000604051808303818588803b158015610c2357600080fd5b505af1158015610c37573d6000803e3d6000fd5b5050505050565b5050565b610c4a6107a6565b15610d9057600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343d726d66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610cd557600080fd5b505af1158015610ce9573d6000803e3d6000fd5b50505050600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639af6549a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610d7357600080fd5b505af1158015610d87573d6000803e3d6000fd5b50505050610e2f565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c52dc416040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610e1657600080fd5b505af1158015610e2a573d6000803e3d6000fd5b505050505b610e37611104565b565b610e438282611106565b600554610e6082610e526105c1565b610aca90919063ffffffff16565b11151515610ed6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f43617070656443726f776473616c653a2063617020657863656564656400000081525060200191505060405180910390fd5b5050565b600080831415610eed5760009050610fa1565b60008284029050828482811515610f0057fe5b04141515610f9c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f81526020017f770000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b809150505b92915050565b610faf6109f8565b73ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561105157600080fd5b505af1158015611065573d6000803e3d6000fd5b505050506040513d602081101561107b57600080fd5b81019080805190602001909291905050501515611100576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4d696e74656443726f776473616c653a206d696e74696e67206661696c65640081525060200191505060405180910390fd5b5050565b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156111d1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001807f43726f776473616c653a2062656e656669636961727920697320746865207a6581526020017f726f20616464726573730000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6000811415151561124a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f43726f776473616c653a20776569416d6f756e7420697320300000000000000081525060200191505060405180910390fd5b505056fea165627a7a72305820f6424ae62c501dd595b60301bb79ec2388b1980ea7f69326f1d24f3dddb13c190029608060405234801561001057600080fd5b506040516020806114918339810180604052602081101561003057600080fd5b8101908080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f4101e71e974f68df5e9730cc223280b41654676bbb052cdcc735c3337e64d2d96000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156101d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d8152602001807f526566756e64457363726f773a2062656e65666963696172792069732074686581526020017f207a65726f20616464726573730000000000000000000000000000000000000081525060400191505060405180910390fd5b80600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260006101000a81548160ff0219169083600281111561023057fe5b02179055505061124c806102456000396000f3fe6080604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632348238c146100b457806338af3eed1461010557806343d726d61461015c57806351cff8d914610173578063685ca194146101c45780638c52dc411461022d5780639af6549a14610244578063c19d93fb1461025b578063c6dbdf6114610294578063e3a9db1a146102eb578063f340fa0114610350575b600080fd5b3480156100c057600080fd5b50610103600480360360208110156100d757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610394565b005b34801561011157600080fd5b5061011a610610565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561016857600080fd5b5061017161063a565b005b34801561017f57600080fd5b506101c26004803603602081101561019657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610838565b005b3480156101d057600080fd5b50610213600480360360208110156101e757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108e7565b604051808215151515815260200191505060405180910390f35b34801561023957600080fd5b50610242610919565b005b34801561025057600080fd5b50610259610b18565b005b34801561026757600080fd5b50610270610c5c565b6040518082600281111561028057fe5b60ff16815260200191505060405180910390f35b3480156102a057600080fd5b506102a9610c73565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102f757600080fd5b5061033a6004803603602081101561030e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c9c565b6040518082815260200191505060405180910390f35b6103926004803603602081101561036657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ce5565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561047e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001807f5365636f6e646172793a2063616c6c6572206973206e6f74207468652070726981526020017f6d617279206163636f756e74000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515610549576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001807f5365636f6e646172793a206e6577207072696d61727920697320746865207a6581526020017f726f20616464726573730000000000000000000000000000000000000000000081525060400191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f4101e71e974f68df5e9730cc223280b41654676bbb052cdcc735c3337e64d2d96000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610724576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001807f5365636f6e646172793a2063616c6c6572206973206e6f74207468652070726981526020017f6d617279206163636f756e74000000000000000000000000000000000000000081525060400191505060405180910390fd5b6000600281111561073157fe5b600260009054906101000a900460ff16600281111561074c57fe5b1415156107e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001807f526566756e64457363726f773a2063616e206f6e6c7920636c6f73652077686981526020017f6c6520616374697665000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60028060006101000a81548160ff0219169083600281111561080557fe5b02179055507f088672c3a6e342f7cd94a65ba63b79df24a8973927b4d05d803c44bbf787d12f60405160405180910390a1565b610841816108e7565b15156108db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260338152602001807f436f6e646974696f6e616c457363726f773a207061796565206973206e6f742081526020017f616c6c6f77656420746f2077697468647261770000000000000000000000000081525060400191505060405180910390fd5b6108e481610db4565b50565b6000600160028111156108f657fe5b600260009054906101000a900460ff16600281111561091157fe5b149050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a03576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001807f5365636f6e646172793a2063616c6c6572206973206e6f74207468652070726981526020017f6d617279206163636f756e74000000000000000000000000000000000000000081525060400191505060405180910390fd5b60006002811115610a1057fe5b600260009054906101000a900460ff166002811115610a2b57fe5b141515610ac6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001807f526566756e64457363726f773a2063616e206f6e6c7920656e61626c6520726581526020017f66756e6473207768696c6520616374697665000000000000000000000000000081525060400191505060405180910390fd5b6001600260006101000a81548160ff02191690836002811115610ae557fe5b02179055507f599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b8960405160405180910390a1565b600280811115610b2457fe5b600260009054906101000a900460ff166002811115610b3f57fe5b141515610bda576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001807f526566756e64457363726f773a2062656e65666963696172792063616e206f6e81526020017f6c79207769746864726177207768696c6520636c6f736564000000000000000081525060400191505060405180910390fd5b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015610c59573d6000803e3d6000fd5b50565b6000600260009054906101000a900460ff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006002811115610cf257fe5b600260009054906101000a900460ff166002811115610d0d57fe5b141515610da8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001807f526566756e64457363726f773a2063616e206f6e6c79206465706f736974207781526020017f68696c652061637469766500000000000000000000000000000000000000000081525060400191505060405180910390fd5b610db181610fc0565b50565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e9e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001807f5365636f6e646172793a2063616c6c6572206973206e6f74207468652070726981526020017f6d617279206163636f756e74000000000000000000000000000000000000000081525060400191505060405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610f6d573d6000803e3d6000fd5b508173ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040518082815260200191505060405180910390a25050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156110aa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c8152602001807f5365636f6e646172793a2063616c6c6572206973206e6f74207468652070726981526020017f6d617279206163636f756e74000000000000000000000000000000000000000081525060400191505060405180910390fd5b600034905061110181600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461119690919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4826040518082815260200191505060405180910390a25050565b6000808284019050838110151515611216576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b809150509291505056fea165627a7a72305820845c26e40c33c988f59f6c072ca4d8df2c7695e82cae07d0d23f6c7091b80a690029",
  "deployedBytecode": "0x6080604052600436106100e6576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631515bc2b146100f15780632c4e722e14610120578063355274ea1461014b57806340193883146101765780634042b66f146101a157806347535d7b146101cc5780634b6753bc146101fb5780634bb278f3146102265780634f9359451461023d578063521eb2731461026c5780637d3d6522146102c3578063b3f05b97146102f2578063b7a8807c14610321578063bffa55d51461034c578063ec8ac4d81461039d578063fc0c546a146103e1575b6100ef33610438565b005b3480156100fd57600080fd5b50610106610597565b604051808215151515815260200191505060405180910390f35b34801561012c57600080fd5b506101356105a3565b6040518082815260200191505060405180910390f35b34801561015757600080fd5b506101606105ad565b6040518082815260200191505060405180910390f35b34801561018257600080fd5b5061018b6105b7565b6040518082815260200191505060405180910390f35b3480156101ad57600080fd5b506101b66105c1565b6040518082815260200191505060405180910390f35b3480156101d857600080fd5b506101e16105cb565b604051808215151515815260200191505060405180910390f35b34801561020757600080fd5b506102106105e6565b6040518082815260200191505060405180910390f35b34801561023257600080fd5b5061023b6105f0565b005b34801561024957600080fd5b50610252610768565b604051808215151515815260200191505060405180910390f35b34801561027857600080fd5b5061028161077c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102cf57600080fd5b506102d86107a6565b604051808215151515815260200191505060405180910390f35b3480156102fe57600080fd5b506103076107ba565b604051808215151515815260200191505060405180910390f35b34801561032d57600080fd5b506103366107d1565b6040518082815260200191505060405180910390f35b34801561035857600080fd5b5061039b6004803603602081101561036f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107db565b005b6103df600480360360208110156103b357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610438565b005b3480156103ed57600080fd5b506103f66109f8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60016000808282540192505081905550600080549050600034905061045d8382610a22565b600061046882610aac565b905061047f82600454610aca90919063ffffffff16565b60048190555061048f8482610b54565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8484604051808381526020018281526020019250505060405180910390a36105068483610b62565b61050e610b66565b6105188483610c3e565b505060005481141515610593576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081525060200191505060405180910390fd5b5050565b60006007544211905090565b6000600354905090565b6000600554905090565b6000600954905090565b6000600454905090565b600060065442101580156105e157506007544211155b905090565b6000600754905090565b600860009054906101000a900460ff1615151561069b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001807f46696e616c697a61626c6543726f776473616c653a20616c726561647920666981526020017f6e616c697a65640000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6106a3610597565b1515610717576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f46696e616c697a61626c6543726f776473616c653a206e6f7420636c6f73656481525060200191505060405180910390fd5b6001600860006101000a81548160ff02191690831515021790555061073a610c42565b7f9270cc390c096600a1c17c44345a1ba689fafd99d97487b10cfccf86cf73183660405160405180910390a1565b60006005546107756105c1565b1015905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006009546107b36105c1565b1015905090565b6000600860009054906101000a900460ff16905090565b6000600654905090565b6107e36107ba565b151561087d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f526566756e6461626c6543726f776473616c653a206e6f742066696e616c697a81526020017f656400000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6108856107a6565b151515610920576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f526566756e6461626c6543726f776473616c653a20676f616c2072656163686581526020017f640000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351cff8d9826040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156109dd57600080fd5b505af11580156109f1573d6000803e3d6000fd5b5050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610a2a6105cb565b1515610a9e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f54696d656443726f776473616c653a206e6f74206f70656e000000000000000081525060200191505060405180910390fd5b610aa88282610e39565b5050565b6000610ac360035483610eda90919063ffffffff16565b9050919050565b6000808284019050838110151515610b4a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b610b5e8282610fa7565b5050565b5050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f340fa0134336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506000604051808303818588803b158015610c2357600080fd5b505af1158015610c37573d6000803e3d6000fd5b5050505050565b5050565b610c4a6107a6565b15610d9057600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343d726d66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610cd557600080fd5b505af1158015610ce9573d6000803e3d6000fd5b50505050600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639af6549a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610d7357600080fd5b505af1158015610d87573d6000803e3d6000fd5b50505050610e2f565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c52dc416040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610e1657600080fd5b505af1158015610e2a573d6000803e3d6000fd5b505050505b610e37611104565b565b610e438282611106565b600554610e6082610e526105c1565b610aca90919063ffffffff16565b11151515610ed6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f43617070656443726f776473616c653a2063617020657863656564656400000081525060200191505060405180910390fd5b5050565b600080831415610eed5760009050610fa1565b60008284029050828482811515610f0057fe5b04141515610f9c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f81526020017f770000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b809150505b92915050565b610faf6109f8565b73ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561105157600080fd5b505af1158015611065573d6000803e3d6000fd5b505050506040513d602081101561107b57600080fd5b81019080805190602001909291905050501515611100576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f4d696e74656443726f776473616c653a206d696e74696e67206661696c65640081525060200191505060405180910390fd5b5050565b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156111d1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001807f43726f776473616c653a2062656e656669636961727920697320746865207a6581526020017f726f20616464726573730000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6000811415151561124a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f43726f776473616c653a20776569416d6f756e7420697320300000000000000081525060200191505060405180910390fd5b505056fea165627a7a72305820f6424ae62c501dd595b60301bb79ec2388b1980ea7f69326f1d24f3dddb13c190029",
  "sourceMap": "1428:718:2:-;;;1519:624;8:9:-1;5:2;;;30:1;27;20:12;5:2;1519:624:2;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1519:624:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1895:4;1840:11;1853;1811:3;1765:4;1771:6;1779:5;884:1:22;868:13;:17;;;;2378:1:5;2371:4;:8;2363:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2440:1;2422:20;;:6;:20;;;;2414:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2528:1;2502:28;;2510:5;2502:28;;;;2494:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2590:4;2582:5;:12;;;;2614:6;2604:7;;:16;;;;;;;;;;;;;;;;;;2639:5;2630:6;;:14;;;;;;;;;;;;;;;;;;2281:370;;;488:1:9;482:3;:7;474:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;536:3;529:4;:10;;;;431:115;1064:15:10;1049:11;:30;;1041:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1220:11;1206;:25;1198:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1317:11;1302:12;:26;;;;1353:11;1338:12;:26;;;;915:456;;459:5:6;446:10;;:18;;;;;;;;;;;;;;;;;;1228:1:7;1221:4;:8;1213:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:8;:6;;;:8;;;:::i;:::-;1284:26;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1284:26:7;1274:7;;:36;;;;;;;;;;;;;;;;;;1328:4;1320:5;:12;;;;1169:170;2084:3:2;2076:4;:11;;2068:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1519:624;;;;;;;1428:718;;3218:87:5;3257:15;3291:7;;;;;;;;;;;3284:14;;3218:87;:::o;1428:718:2:-;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "1428:718:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2979:21:5;2989:10;2979:9;:21::i;:::-;1428:718:2;2117:156:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2117:156:10;;;;;;;;;;;;;;;;;;;;;;;;;;;3390:75:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3390:75:5;;;;;;;;;;;;;;;;;;;;;;;609:73:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;609:73:9;;;;;;;;;;;;;;;;;;;;;;;1421:75:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1421:75:7;;;;;;;;;;;;;;;;;;;;;;;3528:85:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3528:85:5;;;;;;;;;;;;;;;;;;;;;;;1764:189:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1764:189:10;;;;;;;;;;;;;;;;;;;;;;;;;;;1590:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1590:89:10;;;;;;;;;;;;;;;;;;;;;;;801:262:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;801:262:6;;;;;;800:92:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;800:92:9;;;;;;;;;;;;;;;;;;;;;;;;;;;3218:87:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3218:87:5;;;;;;;;;;;;;;;;;;;;;;;;;;;2005:94:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2005:94:7;;;;;;;;;;;;;;;;;;;;;;;;;;;561:82:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;561:82:6;;;;;;;;;;;;;;;;;;;;;;;;;;;1436:89:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1436:89:10;;;;;;;;;;;;;;;;;;;;;;;1646:236:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1646:236:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1646:236:7;;;;;;;;;;;;;;;;;;;;;;3870:603:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3870:603:5;;;;;;;;;;;;;;;;;;;;;;3066:76;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3066:76:5;;;;;;;;;;;;;;;;;;;;;;;;;;;3870:603;1318:1:22;1301:13;;:18;;;;;;;;;;;1329:20;1352:13;;1329:36;;3948:17:5;3968:9;3948:29;;3987:44;4008:11;4021:9;3987:20;:44::i;:::-;4090:14;4107:26;4123:9;4107:15;:26::i;:::-;4090:43;;4181:25;4196:9;4181:10;;:14;;:25;;;;:::i;:::-;4168:10;:38;;;;4217:37;4234:11;4247:6;4217:16;:37::i;:::-;4297:11;4269:59;;4285:10;4269:59;;;4310:9;4321:6;4269:59;;;;;;;;;;;;;;;;;;;;;;;;4339:46;4362:11;4375:9;4339:22;:46::i;:::-;4396:15;:13;:15::i;:::-;4421:45;4443:11;4456:9;4421:21;:45::i;:::-;1375:1:22;;1410:13;;1394:12;:29;1386:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3870:603:5;;:::o;2117:156:10:-;2159:4;2254:12;;2236:15;:30;2229:37;;2117:156;:::o;3390:75:5:-;3427:7;3453:5;;3446:12;;3390:75;:::o;609:73:9:-;645:7;671:4;;664:11;;609:73;:::o;1421:75:7:-;1458:7;1484:5;;1477:12;;1421:75;:::o;3528:85:5:-;3570:7;3596:10;;3589:17;;3528:85;:::o;1764:189:10:-;1803:4;1899:12;;1880:15;:31;;:66;;;;;1934:12;;1915:15;:31;;1880:66;1873:73;;1764:189;:::o;1590:89::-;1634:7;1660:12;;1653:19;;1590:89;:::o;801:262:6:-;847:10;;;;;;;;;;;846:11;838:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;919:11;:9;:11::i;:::-;911:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;991:4;978:10;;:17;;;;;;;;;;;;;;;;;;1006:15;:13;:15::i;:::-;1036:20;;;;;;;;;;801:262::o;800:92:9:-;843:4;881;;866:11;:9;:11::i;:::-;:19;;859:26;;800:92;:::o;3218:87:5:-;3257:15;3291:7;;;;;;;;;;;3284:14;;3218:87;:::o;2005:94:7:-;2049:4;2087:5;;2072:11;:9;:11::i;:::-;:20;;2065:27;;2005:94;:::o;561:82:6:-;603:4;626:10;;;;;;;;;;;619:17;;561:82;:::o;1436:89:10:-;1480:7;1506:12;;1499:19;;1436:89;:::o;1646:236:7:-;1718:11;:9;:11::i;:::-;1710:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1787:13;:11;:13::i;:::-;1786:14;1778:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1849:7;;;;;;;;;;;:16;;;1866:8;1849:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1849:26:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1849:26:7;;;;1646:236;:::o;3066:76:5:-;3104:6;3129;;;;;;;;;;;3122:13;;3066:76;:::o;2466:165:10:-;672:8;:6;:8::i;:::-;664:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2574:50;2601:11;2614:9;2574:26;:50::i;:::-;2466:165;;:::o;7183:120:5:-;7250:7;7276:20;7290:5;;7276:9;:13;;:20;;;;:::i;:::-;7269:27;;7183:120;;;:::o;834:176:11:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;6385:134:5:-;6472:40;6487:11;6500;6472:14;:40::i;:::-;6385:134;;:::o;6789:145::-;;;:::o;2527:95:7:-;2571:7;;;;;;;;;;;:15;;;2593:9;2604:10;2571:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2571:44:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2571:44:7;;;;;2527:95::o;5553:149:5:-;;;:::o;2193:238:7:-;2241:13;:11;:13::i;:::-;2237:156;;;2270:7;;;;;;;;;;;:13;;;:15;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2270:15:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2270:15:7;;;;2299:7;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2299:29:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2299:29:7;;;;2237:156;;;2359:7;;;;;;;;;;;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2359:23:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2359:23:7;;;;2237:156;2403:21;:19;:21::i;:::-;2193:238::o;1088:237:9:-;1182:50;1209:11;1222:9;1182:26;:50::i;:::-;1280:4;;1250:26;1266:9;1250:11;:9;:11::i;:::-;:15;;:26;;;;:::i;:::-;:34;;1242:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1088:237;;:::o;1693:458:11:-;1751:7;1996:1;1991;:6;1987:45;;;2020:1;2013:8;;;;1987:45;2042:9;2058:1;2054;:5;2042:17;;2086:1;2081;2077;:5;;;;;;;;:10;2069:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2143:1;2136:8;;;1693:458;;;;;:::o;510:309:8:-;711:7;:5;:7::i;:::-;689:36;;;726:11;739;689:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;689:62:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;689:62:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;689:62:8;;;;;;;;;;;;;;;;668:144;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;510:309;;:::o;1272:98:6:-;:::o;5015:243:5:-;5140:1;5117:25;;:11;:25;;;;5109:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5220:1;5207:9;:14;;5199:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5015:243;;:::o",
  "source": "pragma solidity ^0.5.0;\r\n\r\nimport \"openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol\";\r\nimport \"openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol\";\r\nimport \"openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol\";\r\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol\";\r\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\";\r\n\r\n/**\r\n * @title NudiCoinCrowdsaleToken\r\n * @dev Very simple ERC20 Token that can be minted.\r\n * It is meant to be used in a crowdsale contract.\r\n \r\ncontract NudiCoinCrowdsaleToken is ERC20Mintable, ERC20Detailed {\r\n    constructor () public ERC20Detailed(\"Nudi Coin\", \"NUDI\", 18) {\r\n        // solhint-disable-previous-line no-empty-blocks\r\n    }\r\n}\r\n*/\r\n/**\r\n * @title NudiCoinCrowdsale\r\n * @dev This is an example of a fully fledged crowdsale.\r\n * The way to add new features to a base crowdsale is by multiple inheritance.\r\n * In this example we are providing following extensions:\r\n * CappedCrowdsale - sets a max boundary for raised funds\r\n * RefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\r\n * MintedCrowdsale - assumes the token can be minted by the crowdsale, which does so\r\n * when receiving purchases.\r\n *\r\n * After adding multiple features it's good practice to run integration tests\r\n * to ensure that subcontracts works together as intended.\r\n */\r\ncontract NudiCoinCrowdsale is CappedCrowdsale, RefundableCrowdsale, MintedCrowdsale {\r\n    constructor (\r\n        uint256 openingTime,\r\n        uint256 closingTime,\r\n        uint256 rate,\r\n        address payable wallet,\r\n        uint256 cap,\r\n        ERC20Mintable token,\r\n        uint256 goal\r\n    )\r\n        public\r\n        Crowdsale(rate, wallet, token)\r\n        CappedCrowdsale(cap)\r\n        TimedCrowdsale(openingTime, closingTime)\r\n        RefundableCrowdsale(goal)\r\n    {\r\n        //As goal needs to be met for a successful crowdsale\r\n        //the value needs to less or equal than a cap which is limit for accepted funds\r\n        require(goal <= cap, \"NudiCoinCrowdSale: goal is greater than cap\");\r\n    }\r\n}\r\n\r\n",
  "sourcePath": "C:/xampp/htdocs/BLOCKCHAIN/nudicoin_ico/nudicoin_ico-new/contracts/NudiCoinCrowdsale.sol",
  "ast": {
    "absolutePath": "/C/xampp/htdocs/BLOCKCHAIN/nudicoin_ico/nudicoin_ico-new/contracts/NudiCoinCrowdsale.sol",
    "exportedSymbols": {
      "NudiCoinCrowdsale": [
        137
      ]
    },
    "id": 138,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 85,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "id": 86,
        "nodeType": "ImportDirective",
        "scope": 138,
        "sourceUnit": 887,
        "src": "27:82:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "id": 87,
        "nodeType": "ImportDirective",
        "scope": 138,
        "sourceUnit": 784,
        "src": "111:88:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "id": 88,
        "nodeType": "ImportDirective",
        "scope": 138,
        "sourceUnit": 813,
        "src": "201:80:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
        "id": 89,
        "nodeType": "ImportDirective",
        "scope": 138,
        "sourceUnit": 2006,
        "src": "283:71:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 90,
        "nodeType": "ImportDirective",
        "scope": 138,
        "sourceUnit": 1978,
        "src": "356:71:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 91,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 886,
              "src": "1458:15:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$886",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 92,
            "nodeType": "InheritanceSpecifier",
            "src": "1458:15:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 93,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 783,
              "src": "1475:19:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$783",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 94,
            "nodeType": "InheritanceSpecifier",
            "src": "1475:19:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 95,
              "name": "MintedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 812,
              "src": "1496:15:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintedCrowdsale_$812",
                "typeString": "contract MintedCrowdsale"
              }
            },
            "id": 96,
            "nodeType": "InheritanceSpecifier",
            "src": "1496:15:2"
          }
        ],
        "contractDependencies": [
          594,
          654,
          783,
          812,
          886,
          1036,
          2344
        ],
        "contractKind": "contract",
        "documentation": "@title NudiCoinCrowdsale\r\n@dev This is an example of a fully fledged crowdsale.\r\nThe way to add new features to a base crowdsale is by multiple inheritance.\r\nIn this example we are providing following extensions:\r\nCappedCrowdsale - sets a max boundary for raised funds\r\nRefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\r\nMintedCrowdsale - assumes the token can be minted by the crowdsale, which does so\r\nwhen receiving purchases.\r\n\n * After adding multiple features it's good practice to run integration tests\r\nto ensure that subcontracts works together as intended.\r",
        "fullyImplemented": true,
        "id": 137,
        "linearizedBaseContracts": [
          137,
          812,
          783,
          654,
          1036,
          886,
          594,
          2344
        ],
        "name": "NudiCoinCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 135,
              "nodeType": "Block",
              "src": "1906:237:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 129,
                          "name": "goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 110,
                          "src": "2076:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 130,
                          "name": "cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 106,
                          "src": "2084:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2076:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e756469436f696e43726f776453616c653a20676f616c2069732067726561746572207468616e20636170",
                        "id": 132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2089:45:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0583549147c49358eab1c72f4f105037f6dd1e396928fd1651fb252e38fbf194",
                          "typeString": "literal_string \"NudiCoinCrowdSale: goal is greater than cap\""
                        },
                        "value": "NudiCoinCrowdSale: goal is greater than cap"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0583549147c49358eab1c72f4f105037f6dd1e396928fd1651fb252e38fbf194",
                          "typeString": "literal_string \"NudiCoinCrowdSale: goal is greater than cap\""
                        }
                      ],
                      "id": 128,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2362,
                        2363
                      ],
                      "referencedDeclaration": 2363,
                      "src": "2068:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2068:67:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 134,
                  "nodeType": "ExpressionStatement",
                  "src": "2068:67:2"
                }
              ]
            },
            "documentation": null,
            "id": 136,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 113,
                    "name": "rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 102,
                    "src": "1765:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 114,
                    "name": "wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 104,
                    "src": "1771:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 115,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 108,
                    "src": "1779:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$2005",
                      "typeString": "contract ERC20Mintable"
                    }
                  }
                ],
                "id": 116,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 112,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 594,
                  "src": "1755:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$594_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1755:30:2"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 118,
                    "name": "cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 106,
                    "src": "1811:3:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 119,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 117,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 886,
                  "src": "1795:15:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$886_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1795:20:2"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 121,
                    "name": "openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 98,
                    "src": "1840:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 122,
                    "name": "closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 100,
                    "src": "1853:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 123,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 120,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1036,
                  "src": "1825:14:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$1036_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1825:40:2"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 125,
                    "name": "goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 110,
                    "src": "1895:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 126,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 124,
                  "name": "RefundableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 783,
                  "src": "1875:19:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RefundableCrowdsale_$783_$",
                    "typeString": "type(contract RefundableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1875:25:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98,
                  "name": "openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "1542:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1542:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100,
                  "name": "closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "1572:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1572:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102,
                  "name": "rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "1602:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1602:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104,
                  "name": "wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "1625:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1625:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 106,
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "1658:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1658:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 108,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "1680:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Mintable_$2005",
                    "typeString": "contract ERC20Mintable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 107,
                    "name": "ERC20Mintable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2005,
                    "src": "1680:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$2005",
                      "typeString": "contract ERC20Mintable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 110,
                  "name": "goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "1710:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1710:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1531:198:2"
            },
            "returnParameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1906:0:2"
            },
            "scope": 137,
            "src": "1519:624:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 138,
        "src": "1428:718:2"
      }
    ],
    "src": "0:2150:2"
  },
  "legacyAST": {
    "absolutePath": "/C/xampp/htdocs/BLOCKCHAIN/nudicoin_ico/nudicoin_ico-new/contracts/NudiCoinCrowdsale.sol",
    "exportedSymbols": {
      "NudiCoinCrowdsale": [
        137
      ]
    },
    "id": 138,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 85,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "id": 86,
        "nodeType": "ImportDirective",
        "scope": 138,
        "sourceUnit": 887,
        "src": "27:82:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "id": 87,
        "nodeType": "ImportDirective",
        "scope": 138,
        "sourceUnit": 784,
        "src": "111:88:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "file": "openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "id": 88,
        "nodeType": "ImportDirective",
        "scope": 138,
        "sourceUnit": 813,
        "src": "201:80:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
        "id": 89,
        "nodeType": "ImportDirective",
        "scope": 138,
        "sourceUnit": 2006,
        "src": "283:71:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 90,
        "nodeType": "ImportDirective",
        "scope": 138,
        "sourceUnit": 1978,
        "src": "356:71:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 91,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 886,
              "src": "1458:15:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$886",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 92,
            "nodeType": "InheritanceSpecifier",
            "src": "1458:15:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 93,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 783,
              "src": "1475:19:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$783",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 94,
            "nodeType": "InheritanceSpecifier",
            "src": "1475:19:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 95,
              "name": "MintedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 812,
              "src": "1496:15:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintedCrowdsale_$812",
                "typeString": "contract MintedCrowdsale"
              }
            },
            "id": 96,
            "nodeType": "InheritanceSpecifier",
            "src": "1496:15:2"
          }
        ],
        "contractDependencies": [
          594,
          654,
          783,
          812,
          886,
          1036,
          2344
        ],
        "contractKind": "contract",
        "documentation": "@title NudiCoinCrowdsale\r\n@dev This is an example of a fully fledged crowdsale.\r\nThe way to add new features to a base crowdsale is by multiple inheritance.\r\nIn this example we are providing following extensions:\r\nCappedCrowdsale - sets a max boundary for raised funds\r\nRefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\r\nMintedCrowdsale - assumes the token can be minted by the crowdsale, which does so\r\nwhen receiving purchases.\r\n\n * After adding multiple features it's good practice to run integration tests\r\nto ensure that subcontracts works together as intended.\r",
        "fullyImplemented": true,
        "id": 137,
        "linearizedBaseContracts": [
          137,
          812,
          783,
          654,
          1036,
          886,
          594,
          2344
        ],
        "name": "NudiCoinCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 135,
              "nodeType": "Block",
              "src": "1906:237:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 129,
                          "name": "goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 110,
                          "src": "2076:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 130,
                          "name": "cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 106,
                          "src": "2084:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2076:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e756469436f696e43726f776453616c653a20676f616c2069732067726561746572207468616e20636170",
                        "id": 132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2089:45:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0583549147c49358eab1c72f4f105037f6dd1e396928fd1651fb252e38fbf194",
                          "typeString": "literal_string \"NudiCoinCrowdSale: goal is greater than cap\""
                        },
                        "value": "NudiCoinCrowdSale: goal is greater than cap"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0583549147c49358eab1c72f4f105037f6dd1e396928fd1651fb252e38fbf194",
                          "typeString": "literal_string \"NudiCoinCrowdSale: goal is greater than cap\""
                        }
                      ],
                      "id": 128,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2362,
                        2363
                      ],
                      "referencedDeclaration": 2363,
                      "src": "2068:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2068:67:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 134,
                  "nodeType": "ExpressionStatement",
                  "src": "2068:67:2"
                }
              ]
            },
            "documentation": null,
            "id": 136,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 113,
                    "name": "rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 102,
                    "src": "1765:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 114,
                    "name": "wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 104,
                    "src": "1771:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 115,
                    "name": "token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 108,
                    "src": "1779:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$2005",
                      "typeString": "contract ERC20Mintable"
                    }
                  }
                ],
                "id": 116,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 112,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 594,
                  "src": "1755:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$594_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1755:30:2"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 118,
                    "name": "cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 106,
                    "src": "1811:3:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 119,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 117,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 886,
                  "src": "1795:15:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$886_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1795:20:2"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 121,
                    "name": "openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 98,
                    "src": "1840:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 122,
                    "name": "closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 100,
                    "src": "1853:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 123,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 120,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1036,
                  "src": "1825:14:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$1036_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1825:40:2"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 125,
                    "name": "goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 110,
                    "src": "1895:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 126,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 124,
                  "name": "RefundableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 783,
                  "src": "1875:19:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RefundableCrowdsale_$783_$",
                    "typeString": "type(contract RefundableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1875:25:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98,
                  "name": "openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "1542:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1542:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 100,
                  "name": "closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "1572:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1572:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 102,
                  "name": "rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "1602:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1602:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104,
                  "name": "wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "1625:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1625:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 106,
                  "name": "cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "1658:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1658:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 108,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "1680:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Mintable_$2005",
                    "typeString": "contract ERC20Mintable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 107,
                    "name": "ERC20Mintable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2005,
                    "src": "1680:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$2005",
                      "typeString": "contract ERC20Mintable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 110,
                  "name": "goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "1710:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1710:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1531:198:2"
            },
            "returnParameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1906:0:2"
            },
            "scope": 137,
            "src": "1519:624:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 138,
        "src": "1428:718:2"
      }
    ],
    "src": "0:2150:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x9270cc390c096600a1c17c44345a1ba689fafd99d97487b10cfccf86cf731836": {
          "anonymous": false,
          "inputs": [],
          "name": "CrowdsaleFinalized",
          "type": "event",
          "signature": "0x9270cc390c096600a1c17c44345a1ba689fafd99d97487b10cfccf86cf731836"
        },
        "0x46711e222f558a07afd26e5e71b48ecb0a8b2cdcd40faeb1323e05e2c76a2f32": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "prevClosingTime",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "newClosingTime",
              "type": "uint256"
            }
          ],
          "name": "TimedCrowdsaleExtended",
          "type": "event",
          "signature": "0x46711e222f558a07afd26e5e71b48ecb0a8b2cdcd40faeb1323e05e2c76a2f32"
        },
        "0x6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "purchaser",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "beneficiary",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "TokensPurchased",
          "type": "event",
          "signature": "0x6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b"
        }
      },
      "links": {},
      "address": "0x901bEC22d84556A8579c1752789C1ee5ffd71579",
      "transactionHash": "0x6b8f22e793e86aee3dab0f77ee30a9765d7e3e7140506d30119e989b833729c7"
    }
  },
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-06-25T10:54:39.093Z",
  "devdoc": {
    "details": "This is an example of a fully fledged crowdsale.\r The way to add new features to a base crowdsale is by multiple inheritance.\r In this example we are providing following extensions:\r CappedCrowdsale - sets a max boundary for raised funds\r RefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\r MintedCrowdsale - assumes the token can be minted by the crowdsale, which does so\r when receiving purchases.\r  * After adding multiple features it's good practice to run integration tests\r to ensure that subcontracts works together as intended.\r",
    "methods": {
      "buyTokens(address)": {
        "details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
        "params": {
          "beneficiary": "Recipient of the token purchase"
        }
      },
      "cap()": {
        "return": "the cap of the crowdsale."
      },
      "capReached()": {
        "details": "Checks whether the cap has been reached.",
        "return": "Whether the cap was reached"
      },
      "claimRefund(address)": {
        "details": "Investors can claim refunds here if crowdsale is unsuccessful.",
        "params": {
          "refundee": "Whose refund will be claimed."
        }
      },
      "closingTime()": {
        "return": "the crowdsale closing time."
      },
      "finalize()": {
        "details": "Must be called after crowdsale ends, to do some extra finalization work. Calls the contract's finalization function."
      },
      "finalized()": {
        "return": "true if the crowdsale is finalized, false otherwise."
      },
      "goal()": {
        "return": "minimum amount of funds to be raised in wei."
      },
      "goalReached()": {
        "details": "Checks whether funding goal was reached.",
        "return": "Whether funding goal was reached"
      },
      "hasClosed()": {
        "details": "Checks whether the period in which the crowdsale is open has already elapsed.",
        "return": "Whether crowdsale period has elapsed"
      },
      "isOpen()": {
        "return": "true if the crowdsale is open, false otherwise."
      },
      "openingTime()": {
        "return": "the crowdsale opening time."
      },
      "rate()": {
        "return": "the number of token units a buyer gets per wei."
      },
      "token()": {
        "return": "the token being sold."
      },
      "wallet()": {
        "return": "the address where funds are collected."
      },
      "weiRaised()": {
        "return": "the amount of wei raised."
      }
    },
    "title": "NudiCoinCrowdsale\r"
  },
  "userdoc": {
    "methods": {}
  }
}